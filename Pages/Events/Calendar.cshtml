@page
@using System.Text.Json
@using Gadevang_Tennis_Klub.Interfaces.Models
@using Gadevang_Tennis_Klub.Models
@model Gadevang_Tennis_Klub.Pages.Events.CalendarModel
@functions 
{    
    void RenderDayCell(int day, int month, int year, bool isCurrentMonth)
    {
        // C# :
        DateTime today = DateTime.Today;
        bool isToday = (day == today.Day && month == today.Month && year == today.Year);

        string cellColor = isToday ? "background-color: #fcdbae;" : (!isCurrentMonth ? "background-color: #eeeeee;" : "");
        string textColor = isCurrentMonth ? "" : "text-muted"; // Faded text style for other months than the current.

        var eventsForThisDay = Model.Events.Where(e => e.Start.Day == day 
                                                    && e.Start.Month == month 
                                                    && e.Start.Year == year);

        // HTML :
        <text>
            <td class="position-relative @textColor" style="height: 100px; @cellColor">
                <span class="date-number">@day.</span>

                @foreach (Event ev in eventsForThisDay)
                {
                    <button type="button"
                    class="card mt-2 p-0 text-start"
                    data-activities='@Html.Raw(JsonSerializer.Serialize(Model.GetEventActivitesByEventID(ev.ID)))'
                    onclick="openEventModal('@ev.Title', 
                                            '@ev.Description', 
                                            '@ev.Start.ToString("HH:mm")', 
                                            '@ev.End.ToString("HH:mm")', 
                                            '@ev.Location',
                                            '@ev.Capacity',
                                            '@month', 
                                            '@year',
                                            this.getAttribute('data-activities'))"
                    style="background-color: #87d49a; width:100%; color:@(isCurrentMonth ? "black" : "dimgray");"
                    title="@ev.Title">
                        <span class="small ps-1">@ev.Title</span>
                    </button>
                }
            </td>
        </text>
    }
}

@{
    ViewData["Title"] = "Calendar";

    // Current month info's
    int _daysInCurrentMonth = DateTime.DaysInMonth(Model.CurrentYear, Model.CurrentMonth);
    DateTime _firstDayInCurrentMonth = new DateTime(Model.CurrentYear, Model.CurrentMonth, 1);
    int _startDayOfWeekCurrentMonth = ((int)_firstDayInCurrentMonth.DayOfWeek + 6) % 7;

    // Previous month info's
    DateTime _previousMonth = _firstDayInCurrentMonth.AddMonths(-1);
    int _daysInPreviousMonth = DateTime.DaysInMonth(_previousMonth.Year, _previousMonth.Month);
    int _previousMonthStart = _daysInPreviousMonth - _startDayOfWeekCurrentMonth + 1;

    // Next months info's
    DateTime _nextMonth = _firstDayInCurrentMonth.AddMonths(1);
    int _remainingCells = (7 - ((_startDayOfWeekCurrentMonth + _daysInCurrentMonth) % 7)) % 7; // To fill the rest of the cells with dates from the next month.

    // Info's to control the cell creation loop
    int _totalCells = _startDayOfWeekCurrentMonth + _daysInCurrentMonth + _remainingCells;
    int _currentDay = 1, _nextMonthsCurrentDay = 1;
}

<style>
    .date-number {
        position: absolute;
        top: 0rem;   /* Distance from top */
        right: 0.1rem; /* Distance from right */
        font-size: 12px;
    }
</style>

@* <h1 class="text-center">Kalender</h1> *@
<h3 class="text-center">@Model.MonthName @Model.CurrentYear</h3>

<!-- Hidden fields for current month and year -->
<input asp-for="@Model.CurrentMonth" hidden/>
<input asp-for="@Model.CurrentYear" hidden/>

<!-- Buttons -->
<div class="d-flex justify-content-between">
    <div class="d-flex gap-2">
        <form method="post" asp-page-handler="Previous" asp-route-year="@Model.CurrentYear" asp-route-month="@Model.CurrentMonth">
            <button type="submit" class="btn btn-primary">Previous</button>
        </form>
        <form method="post" asp-page-handler="Next" asp-route-year="@Model.CurrentYear" asp-route-month="@Model.CurrentMonth">
            <button type="submit" class="btn btn-primary">Next</button>
        </form>
    </div>
    <form method="post" asp-page-handler="Today">
        <button type="submit" class="btn btn-primary">Today</button>
    </form>
</div>

<!-- Calendar table data -->
<table class="table table-bordered mt-3" style="table-layout: fixed; width: 100%;">
    <tr>
        @for (int i = 0; i < _totalCells; i++)
        {
            if (i % 7 == 0 && i != 0)
            {
                <!-- Make a new row every time we get to a monday -->
                @:</tr><tr> 
            }

            // Making the cells:
            if (i < _startDayOfWeekCurrentMonth) // Previous month
            {
                RenderDayCell(_previousMonthStart + i, _previousMonth.Month, _previousMonth.Year, false);
            }
            else if (i < _startDayOfWeekCurrentMonth + _daysInCurrentMonth) // Current month
            {
                RenderDayCell(_currentDay++, Model.CurrentMonth, Model.CurrentYear, true);
            }
            else // Next month
            {
                RenderDayCell(_nextMonthsCurrentDay++, _nextMonth.Month, _nextMonth.Year, false);
            }
        }
    </tr>
</table>

<!-- The modal (popup box) -->
<div class="modal" id="eventModal" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <form method="post" asp-page-handler="EventRegister">

                <!-- Modal Header -->
                <div class="modal-header">
                    <div class="d-flex align-items-center gap-3">
                        <!-- Calendar-style date box with a red top and white bottom -->
                        <div style="width: 50px; border: 1px solid red; text-align: center; font-family: Arial, sans-serif;">
                            <!-- Month section in red -->
                            <div style="background-color: red; color: white; padding: 4px 0; font-size: 0.8em;">
                                JUN
                            </div>
                            <!-- Day section in white -->
                            <div style="background-color: white; color: black; padding: 6px 0; font-size: 1.2em; font-weight: bold;">
                                25
                            </div>
                        </div>
                        <!-- Title (placed next to the calendar) -->
                        <h5 class="modal-title"><strong id="modalTitle"></strong></h5>
                    </div>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>

                <!-- Modal body -->
                <div class="modal-body">

                    <!-- Event description -->
                    <br />
                    <div style="display: flex; align-items: flex-start; gap: 10px;">
                        <i class="fa-solid fa-pen" style="width: 20px; display: block; margin-top: 5px;"></i>
                        <p style="margin: 0;" id="modalDescription"></p>
                    </div>
                    <br />

                    <hr />

                    <p><strong>Aktiviteter:</strong></p>
                    <ul id="activityList" style="list-style-type: none; padding: 0;"></ul>

                    <hr />

                    <!-- Event details inside the modal body -->
                    <div>
                        <div style="color: #555;">
                            <i class="fas fa-clock text-center" style="width: 20px;"></i>
                            <span id="modalStart"></span>-<span id="modalEnd"></span>
                        </div>
                        <div style="color: #555;">
                            <i class="fa-solid fa-location-dot text-center" style="width: 20px;"></i>
                            <span id="modalLocation"></span>
                        </div>
                    </div>

                    <!-- Capacity display -->
                    <div style="display: flex; justify-content: flex-end;">
                        <div style="color: #888; font-size: 0.9em;">
                            <i class="fa-solid fa-user text-center" style="width: 20px;"></i>
                            <span id="modalCapacity"></span> tilmeldte
                        </div>
                    </div>
                </div>

                <input type="hidden" name="Title" id="modalTitleInput" />
                <input type="hidden" name="Description" id="modalDescriptionInput" />
                <input type="hidden" name="Start" id="modalStartInput" />
                <input type="hidden" name="End" id="modalEndInput" />
                <input type="hidden" name="Location" id="modalLocationInput" />
                <input type="hidden" name="Capacity" id="modalCapacityInput" />
                <!-- Hidden fields for current month and year -->
                <input type="hidden" name="CurrentMonth" id="modalCurrentMonthInput" />
                <input type="hidden" name="CurrentYear" id="modalCurrentYearInput" />

                <!-- Modal footer -->
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-success">Tilmeld</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- JavaScript function to help open the Modal (popup box) with parameters/arguments -->
<script>
    function openEventModal(title, description, start, end, location, capacity, currentMonth, currentYear, activitiesJson) 
    {
        let activities = activitiesJson ? JSON.parse(activitiesJson) : []; // If the activities is null, make a new empty list, otherwise retrieve the activities from the json format

        // Fill the visible text
        document.getElementById('modalTitle').innerText = title;
        document.getElementById('modalDescription').innerText = description;
        document.getElementById('modalStart').innerText = start;
        document.getElementById('modalEnd').innerText = end;
        document.getElementById('modalLocation').innerText = location;
        document.getElementById('modalCapacity').innerText = `0 / ${capacity ?? ""}`;

        // Fill the form inputs
        document.getElementById('modalCurrentMonthInput').value = currentMonth;
        document.getElementById('modalCurrentYearInput').value = currentYear;
        document.getElementById('modalTitleInput').value = title;
        document.getElementById('modalDescriptionInput').value = description;
        document.getElementById('modalStartInput').value = start;
        document.getElementById('modalEndInput').value = end;
        document.getElementById('modalLocationInput').value = location;
        document.getElementById('modalCapacityInput').value = capacity;

        // Retrieve activities
        var activityList = document.getElementById('activityList');
        activityList.innerHTML = ""; // Start by clearing the list from previous activities
        activities.forEach(activity => {
            var li = document.createElement("li");

            let startTime = activity.Start ? new Date(activity.Start) : null;
            let endTime = activity.End ? new Date(`1970-01-01T${activity.End}`): null; // End isTimeOnly so it needs a fake date for some reason

            // Convert the DateTime and TimeOnly to a string HH:mm string because java sucks
            let formattedStart = startTime ? startTime.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' }) : '';
            let formattedEnd = endTime ? endTime.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' }) : '';

            // HTML setup for the activities:
            li.innerHTML = `
            <div class="card p-3 mx-auto" style="width:90%">
                <p class="m-0">${formattedStart}-${formattedEnd}: <strong>${activity.Title}</strong></p>
                <p class="m-0">${activity.Description ?? ''}</p>
            </div>
            `;
            activityList.appendChild(li);
        });

        // Show the modal
        var modal = new bootstrap.Modal(document.getElementById('eventModal'));
        modal.show();
    }
</script>