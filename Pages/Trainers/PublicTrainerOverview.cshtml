@page
@using Gadevang_Tennis_Klub.Interfaces.Models
@model Gadevang_Tennis_Klub.Pages.Trainers.PublicTrainerOverviewModel
@{
    ViewData["Title"] = "Trænere";
}

<h1 class="text-center">Trænere</h1>

<br />

<div class="container">
    <div class="row justify-content-center">
        <!-- Make a card for each profile -->
        @foreach (ITrainer trainer in await Model.TrainerDB.GetAllTrainersAsync())
        {
            <!-- md-4 defines the width (up to 12) -->
            <div class="col-md-4 p-4 d-flex">
                <div class="card h-100 w-100">
                    <div class="card-body d-flex flex-column">
                        <h5 class="card-title text-center">@trainer.Name</h5>
                        <br />
                        @if (trainer.Image == null)
                        {
                            <img class="img-fluid rounded-circle mx-auto d-block" src="../images/ImageTemp.png" alt="temp img" style="max-width: 150px; height: 150px; object-fit: cover;">
                        }
                        else
                        {
                            <img class="img-fluid rounded-circle mx-auto d-block" src="~/Images/@trainer.Image" alt="@trainer.Name" style="max-width: 150px; height: 150px; object-fit: cover;" />
                        }
                        <br />
                        <p class="card-text">
                            <button type="button" class="btn rounded-pill mb-1" style="background-color: gray; padding: 2px 10px;" disabled>
                                <span class="text-light"><i class="fa-solid fa-phone"></i> @trainer.Phone</span>
                            </button>
                            <button type="button" class="btn rounded-pill mb-1" style="background-color: gray; padding: 2px 10px;" disabled>
                                <span class="text-light"><i class="fa-solid fa-envelope"></i> @trainer.Email</span>
                            </button>
                            @{ List<ITeam> teams = await Model.TeamDB.GetTeamsByTrainerAsync(trainer.Id.ToString()); }

                            <div class="p-2 rounded-3 flex-grow-1" style="background-color: whitesmoke;">
                                <div class="d-flex flex-wrap">
                                @if (teams.Count > 0)
                                {
                                    @foreach (ITeam team in teams)
                                    {
                                        <button type="button" class="btn rounded-pill m-1" style="background-color: gray; padding: 2px 10px;" disabled>
                                            <span class="text-light">@team.Name</span>
                                        </button>
                                    }
                                }
                                </div>
                            </div>
                        </p>
                    </div>
                </div>
            </div>
        }
    </div>
</div>