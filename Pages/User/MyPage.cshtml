@page
@model Gadevang_Tennis_Klub.Pages.User.MyPageModel
@inject Gadevang_Tennis_Klub.Services.OwnerData ownerData;
@{
    ViewData["Title"] = "Min side";
}

<h1 class="text-center">Min Profil</h1>

<br />

<div class="container-fluid">
    <div class="row align-items-stretch align-items-start mb-3">
        <!-- Member Info -->
        <div class="col-md-4 d-flex">
            <div class="card p-3 w-100">
                <h5>Medlemsoplysninger</h5>
                <dl class="row mb-0">
                    <dt class="col-sm-4">ID:</dt>
                    <dd class="col-sm-8">@Model.Member.Id</dd>

                    <dt class="col-sm-4">Navn:</dt>
                    <dd class="col-sm-8">@Model.Member.Name</dd>

                    <dt class="col-sm-4">Adresse:</dt>
                    <dd class="col-sm-8">@Model.Member.Address</dd>

                    <dt class="col-sm-4">Fødselsdato:</dt>
                    <dd class="col-sm-8">@Model.Member.Dob.ToShortDateString()</dd>

                    <dt class="col-sm-4">Køn:</dt>
                    <dd class="col-sm-8">@Model.Member.Sex</dd>

                    <dt class="col-sm-4">Email:</dt>
                    <dd class="col-sm-8">@Model.Member.Email</dd>

                    <dt class="col-sm-4">Telefon:</dt>
                    <dd class="col-sm-8">@Model.Member.Phone</dd>
                </dl>
            </div>
        </div>

        <!-- Bio -->
        <div class="col-md-8 d-flex">
            <div class="card p-3 h-100 w-100">
                <h5>Bio:</h5>
                <p>@(!string.IsNullOrWhiteSpace(Model.Member.Bio) ? Model.Member.Bio : "Ingen bio angivet.")</p>
            </div>
        </div>
    </div>
</div>
<a asp-page="/Members/UpdateMember" asp-route-memberID=@Model.Member.Id class="btn btn-primary">Redigér <i class="fas fa-edit"></i></a>

<br />
<br />
<br />

<h1>Baner bookede</h1>
<table class="table table-hover">
    <thead>
        <tr>
            <th>Bane</th>
            <th>Tid</th>
            <th>Organisator</th>
            <th>Deltagere</th>
            <th>Handlinger</th>
        </tr>
    </thead>
    <tbody>
        @{
            var list = await Model.CourtBookingDB.GetCourtBookingsByParticipantsAsync(Model.Member.Id);
            list.Sort((b1, b2) => b1.Date.CompareTo(b2.Date) * 10 + b1.Timeslot.CompareTo(b2.Timeslot));
            var sortedList = list.Where(b => b.Date >= DateOnly.FromDateTime(DateTime.Now));
            foreach (var booking in sortedList)
            {
                <tr>
                    <td>@($"#{booking.Court_ID}: {(await Model.CourtDB.GetCourtByIDAsync(booking.Court_ID)).Name}")</td>
                    <td>@($"Dato: {booking.Date} | Tidslot: {booking.Timeslot} / {booking.Timeslot + ownerData.CourtsOpen}.00-{booking.Timeslot + ownerData.CourtsOpen + 1}.00")</td>
                    <td>@($"{(await Model.MemberDB.GetMemberByIDAsync((int)booking.Member_ID)).Name}")</td>
                    <td>
                        @{
                            var members = booking.Participants;
                            if (members.Count == 0)
                            {
                                <p>Du spiller mod Maskinen</p>
                            }
                            else
                            {
                                foreach (var member in members)
                                {
                                    <p>@member.Name</p>
                                }
                            }
                        }
                    </td>
                    <td>
                        @if (Model.Member.Id == booking.Member_ID)
                        {
                            <a class="btn btn-success" asp-page="/CourtBookings/Members/AddParticipant" asp-route-bookingId=@booking.ID>Tilføj Deltager <i class="fas fa-user-plus"></i></a>
                            <br />
                            <a class="btn btn-danger" asp-page="/CourtBookings/Members/DeleteMemberBooking" asp-route-bookingId=@booking.ID>Slet Booking <i class="fa fa-calendar-minus"></i></a>
                        }
                        else
                        {
                            <a class="btn btn-danger" asp-page="/CourtBookings/Members/LeaveBooking" asp-route-bookingId=@booking.ID>Forlad Booking <i class="fas fa-sign-out"></i></a>
                        }
                    </td>
                </tr>
            }
        }
    </tbody>
</table>
<br />
<h1>Begivenheder bookede</h1>
<table class="table table-hover">
    <thead>
        <tr>
            <th>Titel</th>
            <th>Lokation</th>
            <th>Tid</th>
            <th>Beskrivelse</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var booking in (await Model.EventBookingDB.GetAllEventBookingsAsync()).Where(@event => @event.MemberID == Model.Member.Id))
        {
            var Event = await Model.EventDB.GetEventByIDAsync(booking.EventID);
            <tr>
                <td>@Event.Title</td>
                <td>@Event.Location</td>
                <td>@($"{DateOnly.FromDateTime(Event.Start)}: {TimeOnly.FromDateTime(Event.Start)}-{Event.End}")</td>
                <td>@Event.Description</td>
            </tr>
        }
    </tbody>
</table>
<br />
<h1>Teams bookede</h1>
<table class="table table-hover">
    <thead>
        <tr>
            <th>Navn</th>
            <th>Træner</th>
            <th>Beskrivelse</th>
            <th>Pris</th>
            <th>Dag</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var team in (await Model.TeamDB.GetTeamsByMemberAsync(Model.Member.Id)))
        {
            <tr>
                <td>@team.Name</td>
                <td>
                    @{
                        var trainers = await Model.TrainerDB.GetAllTrainersAsync();
                        int trainerID = -1;
                        foreach (var tr in trainers)
                        {
                            foreach (var te in await Model.TeamDB.GetTeamsByTrainerAsync(tr.Id.ToString()))
                            {
                                if (te.ID == team.ID)
                                {
                                    trainerID = tr.Id;
                                    break;
                                }
                            }
                        }
                        if (trainerID == -1) throw new Exception("WTF --- kill me");
                        var trainer = await Model.TrainerDB.GetTrainerByIDAsync(trainerID);
                        <p>@trainer.Name</p>
                        @if (trainer.Image != null)
                        {
                            <img class="img-fluid" src="~/Images/@trainer.Image" alt="@trainer.Name" style="max-width: 100px; max-height: 100px;" />
                        }
                    }
                </td>
                <td>@team.Description</td>
                <td>@team.Price</td>
                <td>@team.ActiveDay</td>
            </tr>
        }
    </tbody>
</table>